// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
let gameState = {
    crypto: 0,
    miners: 0,
    power: 0,
    upgrades: [
        { id: 1, name: "–ë–∞–∑–æ–≤—ã–π –º–∞–π–Ω–µ—Ä", price: 10, power: 0.1, owned: 0 },
        { id: 2, name: "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä", price: 50, power: 0.5, owned: 0 },
        { id: 3, name: "–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞", price: 200, power: 2, owned: 0 },
        { id: 4, name: "–ú–∞–π–Ω–∏–Ω–≥-—Ñ–µ—Ä–º–∞", price: 1000, power: 10, owned: 0 },
        { id: 5, name: "–ö—Ä–∏–ø—Ç–æ-—Ñ–µ—Ä–º–∞", price: 5000, power: 50, owned: 0 }
    ],
    lastDailyBonus: null,
    referrals: [],
    referralEarnings: 0,
    lastUpdate: Date.now()
};

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
function loadGame() {
    const saved = localStorage.getItem('cryptoMinerSave');
    if (saved) {
        const parsed = JSON.parse(saved);
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ–≥–¥–∞ –±—ã–ª–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        const offlineTime = (Date.now() - parsed.lastUpdate) / 1000; // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        if (offlineTime > 10) { // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥
            // –ù–∞—á–∏—Å–ª—è–µ–º –æ—Ñ—Ñ–ª–∞–π–Ω-–¥–æ—Ö–æ–¥
            const offlineEarnings = parsed.power * offlineTime * 0.5; // 50% –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
            parsed.crypto += offlineEarnings;
        }
        Object.assign(gameState, parsed);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–≥—Ä—ã
function saveGame() {
    gameState.lastUpdate = Date.now();
    localStorage.setItem('cryptoMinerSave', JSON.stringify(gameState));
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function updateUI() {
    document.getElementById('crypto-display').textContent = gameState.crypto.toFixed(2);
    document.getElementById('miners-count').textContent = gameState.miners;
    document.getElementById('power').textContent = `${gameState.power.toFixed(1)}/—Å–µ–∫`;
    document.getElementById('user-balance').textContent = `${gameState.crypto.toFixed(2)} CRYPTO`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (tg.initDataUnsafe.user) {
        const user = tg.initDataUnsafe.user;
        document.getElementById('user-name').textContent = user.first_name || '–ò–≥—Ä–æ–∫';
        if (user.photo_url) {
            document.getElementById('user-avatar').src = user.photo_url;
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω
    updateShop();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
function updateShop() {
    const shopContainer = document.getElementById('shop-items');
    shopContainer.innerHTML = '';
    
    gameState.upgrades.forEach(upgrade => {
        const item = document.createElement('div');
        item.className = 'shop-item';
        item.innerHTML = `
            <div class="shop-item-info">
                <div class="shop-item-name">${upgrade.name}</div>
                <div class="shop-item-desc">+${upgrade.power.toFixed(1)} –º–æ—â–Ω–æ—Å—Ç–∏</div>
            </div>
            <div class="shop-item-price">${upgrade.price.toFixed(0)} CRYPTO</div>
            <button class="buy-btn" data-id="${upgrade.id}">–ö—É–ø–∏—Ç—å (${upgrade.owned})</button>
        `;
        shopContainer.appendChild(item);
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –ø–æ–∫—É–ø–∫–∏
    document.querySelectorAll('.buy-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const id = parseInt(this.getAttribute('data-id'));
            buyUpgrade(id);
        });
    });
}

// –ü–æ–∫—É–ø–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è
function buyUpgrade(id) {
    const upgrade = gameState.upgrades.find(u => u.id === id);
    if (!upgrade) return;
    
    if (gameState.crypto >= upgrade.price) {
        gameState.crypto -= upgrade.price;
        upgrade.owned += 1;
        gameState.miners += 1;
        gameState.power += upgrade.power;
        
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ü–µ–Ω—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∫—É–ø–∫–∏
        upgrade.price = Math.floor(upgrade.price * 1.15);
        
        updateUI();
        saveGame();
        
        // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
        const btn = document.querySelector(`.buy-btn[data-id="${id}"]`);
        btn.textContent = `–ö—É–ø–∏—Ç—å (${upgrade.owned})`;
        btn.style.transform = 'scale(1.1)';
        setTimeout(() => {
            btn.style.transform = 'scale(1)';
        }, 200);
    } else {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ CRYPTO!');
    }
}

// –ú–∞–π–Ω–∏–Ω–≥ –ø–æ –∫–ª–∏–∫—É
function setupMining() {
    const mineBtn = document.getElementById('mine-btn');
    mineBtn.addEventListener('click', () => {
        gameState.crypto += 1 + (gameState.power * 0.1); // –ë–∞–∑–æ–≤—ã–π –¥–æ—Ö–æ–¥ + 10% –æ—Ç –º–æ—â–Ω–æ—Å—Ç–∏
        updateUI();
        saveGame();
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
        mineBtn.style.transform = 'scale(0.95)';
        setTimeout(() => {
            mineBtn.style.transform = 'scale(1)';
        }, 100);
    });
}

// –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
function setupDailyBonus() {
    const dailyBtn = document.getElementById('daily-bonus');
    dailyBtn.addEventListener('click', () => {
        const now = new Date();
        const lastClaim = gameState.lastDailyBonus ? new Date(gameState.lastDailyBonus) : null;
        
        if (!lastClaim || now.getDate() !== lastClaim.getDate()) {
            const bonus = 100 + (gameState.power * 5); // –ë–∞–∑–æ–≤—ã–π –±–æ–Ω—É—Å + 5x –º–æ—â–Ω–æ—Å—Ç—å
            gameState.crypto += bonus;
            gameState.lastDailyBonus = now.toISOString();
            
            updateUI();
            saveGame();
            
            alert(`üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å: ${bonus.toFixed(2)} CRYPTO!`);
        } else {
            const nextDay = new Date(lastClaim);
            nextDay.setDate(nextDay.getDate() + 1);
            nextDay.setHours(0, 0, 0, 0);
            
            const hoursLeft = Math.floor((nextDay - now) / (1000 * 60 * 60));
            alert(`‚è≥ –í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è. –°–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å —á–µ—Ä–µ–∑ ${hoursLeft} —á–∞—Å–æ–≤.`);
        }
    });
}

// –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
function setupReferralSystem() {
    const referralBtn = document.getElementById('referral-btn');
    const modal = document.getElementById('referral-modal');
    const closeBtn = document.querySelector('.close');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ URL
   
